<Window x:Class="OSEUIDesktop.WPF.Sample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OSEUIDesktop.WPF.Sample"
        xmlns:oseforms="clr-namespace:OSEUIForms.WPF.Logging;assembly=OSEUIForms.WPF"
        xmlns:oseformscommands="clr-namespace:OSEUIForms.WPF.Commands;assembly=OSEUIForms.WPF"
        xmlns:oseuicommands="clr-namespace:OSEUI.WPF.Commands;assembly=OSEUI.WPF"
        xmlns:osecontrols="clr-namespace:OSEUIControls.WPF;assembly=OSEUIControls.WPF"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="800" Icon="osecore.ico">
    <Window.DataContext>
        <local:MainViewModel x:Name="MainViewModel"/>
    </Window.DataContext>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.New" CanExecute="CanNewDocument" Executed="NewDocumentHandler"/>
        <CommandBinding Command="ApplicationCommands.Open" CanExecute="CanOpenDocument" Executed="OpenDocumentHandler"/>
        <CommandBinding Command="ApplicationCommands.Save" CanExecute="CanSaveDocument" Executed="SaveDocumentHandler"/>
        <CommandBinding Command="ApplicationCommands.SaveAs" CanExecute="CanSaveAsDocument" Executed="SaveAsDocumentHandler"/>
        <CommandBinding Command="ApplicationCommands.Close" CanExecute="CanCloseDocument" Executed="CloseDocumentHandler"/>
        <CommandBinding Command="oseuicommands:DesktopAppCommands.ExitApplication" CanExecute="CanExitApplication" Executed="ExitApplication"/>
        <CommandBinding Command="oseuicommands:DesktopAppCommands.OpenRecentDocument" CanExecute="CanOpenRecentDocument" Executed="OpenRecentDocumentHandler"/>
        <CommandBinding Command="oseuicommands:DesktopAppCommands.ShowResultLogFormCommand" CanExecute="CanShowResultLogForm" Executed="ShowResultLogForm"/>
        <CommandBinding Command="ApplicationCommands.Undo" CanExecute="CanUndo" Executed="Undo"/>
        <CommandBinding Command="ApplicationCommands.Redo" CanExecute="CanRedo" Executed="Redo"/>
        <CommandBinding Command="ApplicationCommands.Cut" CanExecute="CanCut" Executed="Cut"/>
        <CommandBinding Command="ApplicationCommands.Copy" CanExecute="CanCopy" Executed="Copy"/>
        <CommandBinding Command="ApplicationCommands.Paste" CanExecute="CanPaste" Executed="Paste"/>
        <CommandBinding Command="ApplicationCommands.Delete" CanExecute="CanDelete" Executed="Delete"/>
        <CommandBinding Command="ApplicationCommands.SelectAll" CanExecute="CanSelectAll" Executed="SelectAll"/>
        <CommandBinding Command="oseformscommands:FormsCommands.ShowAboutBoxCommand" Executed="ShowAboutBoxHandler"/>
        <CommandBinding Command="oseformscommands:FormsCommands.ShowSettingsCommand" Executed="ShowSettingsCommandHandler"/>
        <CommandBinding Command="local:SampleCommands.AddEntry" CanExecute="CanAddEntry" Executed="AddEntry"/>
        <CommandBinding Command="local:SampleCommands.EditEntry" CanExecute="CanEditEntry" Executed="EditEntry"/>
        <CommandBinding Command="local:SampleCommands.DeleteEntry" CanExecute="CanDeleteEntry" Executed="DeleteEntry"/>
        <CommandBinding Command="local:SampleCommands.AddImage" CanExecute="CanAddImage" Executed="AddImage"/>
        <CommandBinding Command="local:SampleCommands.DeleteImage" CanExecute="CanDeleteImage" Executed="DeleteImage"/>
    </Window.CommandBindings>
    <Window.Resources>
        <Style x:Key="MenuIcon" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="pack://application:,,,/fonts/#FluentSystemIcons-Filled"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>
        <Style x:Key="ToolBarIcon" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="pack://application:,,,/fonts/#FluentSystemIcons-Filled"/>
            <Setter Property="FontSize" Value="24"/>
        </Style>
        <Style x:Key="validationStyleTextBox" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" 
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="313*"/>
            <ColumnDefinition Width="87*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Grid.ColumnSpan="2">
            <Menu.Items>
                <MenuItem Header="_File" x:Name="FileMenu">
                    <MenuItem.Items>
                        <MenuItem Command="ApplicationCommands.New">
                            <MenuItem.Icon>
                                <TextBlock Style="{StaticResource MenuIcon}" Text="&#xf9e3;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="ApplicationCommands.Open"/>
                        <MenuItem Command="ApplicationCommands.Save">
                            <MenuItem.Icon>
                                <TextBlock Style="{StaticResource MenuIcon}" Text="&#xf68a;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="ApplicationCommands.SaveAs">
                            <MenuItem.Icon>
                                <TextBlock Style="{StaticResource MenuIcon}" Text="&#xf68c;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Command="ApplicationCommands.Close"/>
                        <Separator />
                        <MenuItem x:Name="RecentFileMenuStart" Visibility="Collapsed"/>
                        <MenuItem x:Name="RecentFileMenuEnd" Visibility="Collapsed"/>
                        <Separator/>
                        <MenuItem Header="Exit" Command="oseuicommands:DesktopAppCommands.ExitApplication"/>
                    </MenuItem.Items>
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem.Items>
                        <MenuItem Header= "{Binding UndoRedo.UndoTitle}" Command="ApplicationCommands.Undo">
                            <MenuItem.Icon>
                                <TextBlock Style="{StaticResource MenuIcon}" Text="&#xf19a;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{Binding UndoRedo.RedoTitle}" Command="ApplicationCommands.Redo">
                            <MenuItem.Icon>
                                <TextBlock Style="{StaticResource MenuIcon}" Text="&#xf16f;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Cut" Command="ApplicationCommands.Cut">
                            <MenuItem.Icon>
                                <TextBlock Style="{StaticResource MenuIcon}" Text="&#xf33b;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Copy" Command="ApplicationCommands.Copy">
                            <MenuItem.Icon>
                                <TextBlock Style="{StaticResource MenuIcon}" Text="&#xf32c;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Paste" Command="ApplicationCommands.Paste">
                            <MenuItem.Icon>
                                <TextBlock Style="{StaticResource MenuIcon}" Text="&#xf2d6;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Delete" Command="ApplicationCommands.Delete">
                            <MenuItem.Icon>
                                <TextBlock Style="{StaticResource MenuIcon}" Text="&#xf34d;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem.Items>
                </MenuItem>
                <MenuItem Header="_Entry">
                    <MenuItem Header="_Add Entry" Command="local:SampleCommands.AddEntry"/>
                    <MenuItem Header="_Edit Entry" Command="local:SampleCommands.EditEntry"/>
                    <Separator/>
                    <MenuItem Header="_Delete Entry" Command="local:SampleCommands.DeleteEntry"/>
                </MenuItem>
                <MenuItem Header="_View">
                    <MenuItem.Items>
                        <MenuItem Header="Toolbars">
                            <MenuItem.Items>
                                <MenuItem Header="Document" IsCheckable="True" IsChecked="{Binding ShowDocumentToolBar}"/>
                                <MenuItem Header="Edit" IsCheckable="True" IsChecked="{Binding ShowEditToolBar}"/>
                            </MenuItem.Items>
                        </MenuItem>
                    </MenuItem.Items>
                </MenuItem>
                <MenuItem Header="_Tools">
                    <MenuItem.Items>
                        <MenuItem Command="oseformscommands:FormsCommands.ShowSettingsCommand"/>
                    </MenuItem.Items>
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem.Items>
                        <MenuItem Header="About OSE Sample App..." Command="oseformscommands:FormsCommands.ShowAboutBoxCommand"></MenuItem>
                    </MenuItem.Items>
                </MenuItem>
            </Menu.Items>
        </Menu>
        <ToolBarTray Grid.Row="1" HorizontalAlignment="Stretch" Grid.ColumnSpan="2">
            <ToolBar Name="EntryToolBar"
                     Visibility="{Binding Path=ShowDocumentToolBar, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ToolBar.Items>
                    <Button ToolTip="New Document" Command="ApplicationCommands.New">
                        <TextBlock Style="{StaticResource ToolBarIcon}" Text="&#xf9e3;"/>
                    </Button>
                    <Button ToolTip="Save Document" Command="ApplicationCommands.Save">
                        <TextBlock Style="{StaticResource ToolBarIcon}" Text="&#xf68a;"/>
                    </Button>
                    <Separator/>
                    <Button ToolTip="Add Journal Entry" Command="local:SampleCommands.AddEntry">
                        <TextBlock Style="{StaticResource ToolBarIcon}" Text="&#xf301;"/>
                    </Button>
                    <Button ToolTip="Edit Journal Entry" Command="local:SampleCommands.EditEntry">
                        <TextBlock Style="{StaticResource ToolBarIcon}" Text="&#xf9a8;"/>
                    </Button>
                    <Separator/>
                    <Button ToolTip="Remove Journal Entry" Command="local:SampleCommands.DeleteEntry">
                        <TextBlock Style="{StaticResource ToolBarIcon}" Text="&#xfbf5;"/>
                    </Button>
                </ToolBar.Items>
            </ToolBar>
            <ToolBar Name="EditToolBar"
                    Visibility="{Binding Path=ShowEditToolBar, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ToolBar.Items>
                    <Button ToolTip="_Undo" Command="ApplicationCommands.Undo">
                        <TextBlock Style="{StaticResource ToolBarIcon}" Text="&#xf19a;"/>
                    </Button>
                    <Button ToolTip="_Redo" Command="ApplicationCommands.Redo">
                        <TextBlock Style="{StaticResource ToolBarIcon}" Text="&#xf16f;"/>
                    </Button>
                    <Separator/>
                    <Button ToolTip="_Cut" Command="ApplicationCommands.Cut">
                        <TextBlock Style="{StaticResource ToolBarIcon}" Text="&#xf33b;"/>
                    </Button>
                    <Button ToolTip="C_opy" Command="ApplicationCommands.Copy">
                        <TextBlock Style="{StaticResource ToolBarIcon}" Text="&#xf32c;"/>
                    </Button>
                    <Button ToolTip="_Paste" Command="ApplicationCommands.Paste">
                        <TextBlock Style="{StaticResource ToolBarIcon}" Text="&#xf2d6;"/>
                    </Button>
                </ToolBar.Items>
            </ToolBar>
        </ToolBarTray>
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.LayoutTransform>
                <ScaleTransform ScaleX="{Binding UIZoom.ZoomLevel}" ScaleY="{Binding UIZoom.ZoomLevel}"/>
            </Grid.LayoutTransform>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition />
                <ColumnDefinition Width="80*"/>
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="1" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <ListView x:Name="EntryList" Grid.Column="0" Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ItemsSource="{Binding Entries}" SelectionChanged="EntryListSelectionChanged"
                      SelectedIndex="{Binding SelectedIndex}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Posted" Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                   <TextBlock TextWrapping="Wrap" Text="{Binding DateLineString}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Title" Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding Title}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <ScrollViewer Grid.Column="2" Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="{Binding NotInEdit, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel>
                    <TextBlock Margin="10"  FontSize="24" TextWrapping="Wrap" HorizontalAlignment="Center" Text="{Binding SelectedEntry.Title}"/>
                    <Image Margin="10" Name="EntryImage" HorizontalAlignment="Center" Source="{Binding SelectedEntry.Image}"/>
                    <TextBlock Margin="10" TextWrapping="Wrap" HorizontalAlignment="Stretch" Text="{Binding SelectedEntry.Entry}"/>
                </StackPanel>
            </ScrollViewer>
            <Grid Grid.Column="2" Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="{Binding InEdit, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer Grid.Row="0" VerticalAlignment="Stretch">
                    <StackPanel>
                        <Label Margin="10,0,0,0">Date Line:</Label>
                        <TextBox Margin="10,0,10,0" x:Name="EntryDateLine" Style="{StaticResource validationStyleTextBox}">
                            <TextBox.Text>
                                <Binding Path="EntryInEdit.DateLine" Converter="{StaticResource DateTimeToStringConverter}">
                                    <Binding.ValidationRules>
                                        <local:DateTimeValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Label Margin="10,0,0,0">Title:</Label>
                        <TextBox Margin="10,0,10,0" x:Name="EntryTitle" FontSize="24" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Stretch" Text="{Binding EntryInEdit.Title}" GotKeyboardFocus="OnTitleFocused"/>
                        <Label Margin="10,0,0,0">Image:</Label>
                        <local:SelectablePanel Margin="10,0,10,0" x:Name="ImagePanel" Background="White"
                                   Focusable="true"
                                   >
                            <local:SelectablePanel.CommandBindings>
                                <CommandBinding Command="ApplicationCommands.Paste" CanExecute="CanPaste" Executed="Paste"/>
                            </local:SelectablePanel.CommandBindings>
                            <Image HorizontalAlignment="Center" Source="{Binding EntryInEdit.Image}" MinHeight="100"/>
                        </local:SelectablePanel>
                        <Label Margin="10,0,0,0">Entry:</Label>
                        <TextBox Margin="10,0,10,0" x:Name="EntryContent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                            Text="{Binding EntryInEdit.Entry}" GotKeyboardFocus="OnContentFocused"
                            AcceptsReturn="True" MinHeight="100"/>
                    </StackPanel>
                </ScrollViewer>
                <osecontrols:ButtonPanel Grid.Row="1" x:Name="OkCancel" ButtonPressed="EditFormButtonPressed" Visibility="{Binding Path=InEdit, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <osecontrols:ButtonPanel.Buttons>
                        <osecontrols:ButtonPanelButton Tag="AddImage" Label="Add Image" Command="local:SampleCommands.AddImage"/>
                        <osecontrols:ButtonPanelButton Tag="DeleteImage" Label="Remove Image" Command="local:SampleCommands.DeleteImage"/>
                    </osecontrols:ButtonPanel.Buttons>
                </osecontrols:ButtonPanel>
            </Grid>
        </Grid>
        <osecontrols:StatusBar Grid.Row="3" Height="30" ResultLog="{Binding ResultLog}" UIZoom="{Binding UIZoom}"
                               UIStatus="{Binding UiStatus}" Grid.ColumnSpan="2"
                               HasProgress="False" HasZoom="False"/>
    </Grid>
</Window>
